name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run flake8
      run: flake8 .
    - name: Run pytest
      run: pytest tests/ -v

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build and push Docker images
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: affiliate-outreach
      run: |
        docker build --target api -t $ECR_REGISTRY/$ECR_REPOSITORY:api-latest .
        docker build --target celery -t $ECR_REGISTRY/$ECR_REPOSITORY:celery-latest .
        docker build --target gradio -t $ECR_REGISTRY/$ECR_REPOSITORY:gradio-latest .
        docker build --target streamlit -t $ECR_REGISTRY/$ECR_REPOSITORY:streamlit-latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:api-latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:celery-latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:gradio-latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:streamlit-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Update ECS services
      run: |
        aws ecs update-service --cluster affiliate-cluster --service affiliate-api-service --force-new-deployment
        aws ecs update-service --cluster affiliate-cluster --service affiliate-celery-service --force-new-deployment
        aws ecs update-service --cluster affiliate-cluster --service affiliate-gradio-service --force-new-deployment
        aws ecs update-service --cluster affiliate-cluster --service affiliate-streamlit-service --force-new-deployment