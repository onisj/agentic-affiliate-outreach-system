version: "3.8"

services:
  api:
    build: .
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
      - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET}
      - LINKEDIN_REDIRECT_URL=${LINKEDIN_REDIRECT_URL}
      - LINKEDIN_ACCESS_TOKEN=${LINKEDIN_ACCESS_TOKEN}
      - POSITIVE_RESPONSE_TEMPLATE_ID=${POSITIVE_RESPONSE_TEMPLATE_ID}
      - NEUTRAL_RESPONSE_TEMPLATE_ID=${NEUTRAL_RESPONSE_TEMPLATE_ID}
      - NEGATIVE_RESPONSE_TEMPLATE_ID=${NEGATIVE_RESPONSE_TEMPLATE_ID}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - affiliate_network

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - affiliate_network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - affiliate_network

  celery:
    build: .
    command: celery -A tasks.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    networks:
      - affiliate_network

  gradio:
    build: .
    command: python ui/gradio_app.py
    ports:
      - "7860:7860"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - api
    volumes:
      - .:/app
    networks:
      - affiliate_network

  streamlit:
    build: .
    command: streamlit run ui/streamlit_app.py --server.port 8501
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - api
    volumes:
      - .:/app
    networks:
      - affiliate_network

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: affiliate_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - affiliate_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    networks:
      - affiliate_network

volumes:
  postgres_data:
  prometheus_data:

networks:
  affiliate_network:
    driver: bridge
