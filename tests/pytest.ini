[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    redis: marks tests that require Redis
    twitter: marks tests that use Twitter API
    linkedin: marks tests that use LinkedIn API
    email: marks tests that use email functionality
    cache: marks tests that use caching
    database: marks tests that require database access
    api: marks tests that test API endpoints
    celery: marks tests that use Celery tasks
    mock: marks tests that use mocking
    e2e: marks end-to-end tests
    performance: marks performance tests
    security: marks security-related tests
    social: marks tests that use social media functionality

# Test configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail
    --durations=10
    --maxfail=3
    --timeout=300

# Environment variables for tests
env =
    DOCKER_ENV=false
    TESTING=true
    PYTHONPATH=.
    REDIS_URL=redis://localhost:6379/0
    DATABASE_URL=postgresql+psycopg2://root:root@localhost:5432/affiliate_db
    TWITTER_API_KEY=test_key
    TWITTER_API_SECRET=test_secret
    LINKEDIN_ACCESS_TOKEN=test_token
    SENDGRID_API_KEY=test_key

log_level = INFO
log_cli = true
log_cli_level = ERROR
log_file = pytest_errors.log
log_file_level = ERROR
log_file_format = %(asctime)s [%(levelname)s] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

filterwarnings =
    error
    ignore::DeprecationWarning:pydantic.*:
    ignore::sqlalchemy.exc.MovedIn20Warning:sqlalchemy.*:
    ignore::UserWarning:celery.*:

asyncio_mode = strict